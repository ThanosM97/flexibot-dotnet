services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    platform: linux/amd64
    container_name: flexbot_app
    depends_on:
      - rabbitmq
      - postgres
      - qdrant
      - minio
      - ollama
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__Postgres=Host=postgres;Port=5432;Database=flexbot;Username=postgres;Password=postgres
      - SEARCH__PROVIDER=Qdrant
      - SEARCH__DOCUMENT_COLLECTION=Documents
      - SEARCH__VECTOR_SIZE=384
      - QDRANT__HOST=qdrant
      - QDRANT__PORT=6334
      - RABBITMQ__HOST=rabbitmq
      - MINIO__ENDPOINT=minio:9000
      - MINIO__ACCESS_KEY=minioadmin
      - MINIO__SECRET_KEY=minioadmin
      - EMBEDDING_PROVIDER=Ollama
      - OLLAMA__ENDPOINT=http://ollama:11434
      - OLLAMA__EMBEDDING_MODEL=all-minilm
    ports:
      - "5000:5000"
    volumes:
      - ..:/workspaces:cached
    command: sleep infinity
    networks:
      - flexbot_network

  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: flexbot_rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - flexbot_network

  postgres:
    image: "postgres:15"
    container_name: flexbot_postgres
    environment:
      POSTGRES_DB: flexbot
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    networks:
      - flexbot_network
    volumes:
      - postgres_data:/var/lib/postgresql/data

  qdrant:
    image: "qdrant/qdrant:v1.7.3"
    container_name: flexbot_qdrant
    ports:
      - "6333:6333"
      - "6334:6334"  # gRPC
    networks:
      - flexbot_network
    volumes:
      - qdrant_data:/qdrant/storage

  minio:
    image: "minio/minio:latest"
    container_name: flexbot_minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - flexbot_network
    volumes:
      - minio_data:/data

  ollama:
    image: "ollama/ollama"
    container_name: flexbot_ollama
    command: sh -c "ollama pull all-minilm && ollama pull llama3.2 && ollama serve"
    volumes:
      - ollama_data:/root/.ollama
    ports:
      - "11434:11434"
    networks:
      - flexbot_network

volumes:
  postgres_data:
  qdrant_data:
  minio_data:
  ollama_data:

networks:
  flexbot_network:
    driver: bridge
